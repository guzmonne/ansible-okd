---
- name: Prepare servers for OKD installation
  hosts: okd
  become: yes
  gather_facts: no
  vars_files:
    - ./vars/aio.yml
  tasks:
    - name: Change hostname
      hostname:
        name: '{{ inventory_hostname  }}'
    - name: Change hosts file
      blockinfile:
        path: /etc/hosts
        regexp: '127.0.0.1'
        content: |
          {{ private_ip  }} {{ inventory_hostname  }}
    - name: Copy profile configuration
      copy:
        src: ./files/profile.sh
        dest: /etc/profile.d/profile.sh
    - name: Add paths to PATH environment variable
      copy:
        dest: /etc/profile.d/custon-path.sh
        content: 'PATH=$PATH:/bin:/sbin/:/usr/bin:/usr/sbin'
    - name: Yum update
      yum:
        update_cache: yes
    - name: Install dependencies
      yum:
        name: '{{ item }}'
        update_cache: no
      loop: '{{ dependencies }}'
    - name: Update system
      shell: 'yum update -y'
    - name: Modify the docker-storage-setup file
      copy:
        dest: /etc/sysconfig/docker-storage-setup
        content: |
          STORAGE_DRIVER=overlay2
          DEVS=/dev/xvdb
          CONTAINER_ROOT_LV_NAME=dockerlv
          CONTAINER_ROOT_LV_SIZE=100%FREE
          CONTAINER_ROOT_LV_MOUNT_PATH=/var/lib/docker
          VG=dockervg
    - name: Configuring docker storage
      shell: '/usr/bin/docker-storage-setup'
    - name: Managing container logs
      lineinfile:
        path: /etc/sysconfig/docker
        regexp: "OPTIONS='--selinux-enabled --log-driver=journald --signature-verification=false'"
        line: "OPTIONS='--insecure-registry=172.30.0.0/16 --selinux-enabled --log-opt max-size=1M --log-opt max-file=3'"
    - name: Add the epel-release-latest-7 repo
      yum:
        name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
        state: present
    - name: Disable epel.repo
      shell: 'sed -i -e "s/^enabled=1/enabled=0/" /etc/yum.repos.d/epel.repo'
    - name: Install Ansible
      yum:
        name: '{{ item }}'
        enablerepo: epel
      tags:
        - openshift-ansible
        - openshift-ansible-repo
      loop:
        - ansible
        - pyOpenSSL
    - name: Copy the ssh private key
      copy:
        src: '{{ kp_file }}'
        dest: '/home/{{ ansible_user }}/.ssh/{{kp_name}}'
        mode: 0400
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'
    - name: Reboot the server
      reboot:
